{"version":3,"sources":["module/inferUserAgentSpec.js"],"names":["assert","chai","TEST_RESULT","darwin","mas","win32","linux","testPlatform","platform","then","userAgent","equal","describe","testInferUserAgent","timeout","it","done","testPromises","_","keys","map","Promise","all","catch","error","TIMEOUT_URL"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;IAEOA,M,GAAUC,c,CAAVD,M;;;AAEP,IAAME,cAAc;AAClBC,UAAQ,0HADU;AAElBC,OAAK,0HAFa;AAGlBC,SAAO,oHAHW;AAIlBC,SAAO;AAJW,CAApB;;AAOA,SAASC,YAAT,CAAuBC,QAAvB,EAAiC;AAC/B,SAAO,8BAAe,QAAf,EAAyBA,QAAzB,EACJC,IADI,CACC,UAACC,SAAD,EAAe;AACnBV,WAAOW,KAAP,CAAaD,SAAb,EAAwBR,YAAYM,QAAZ,CAAxB,EAA+C,uCAA/C;AACD,GAHI,CAAP;AAID;;AAEDI,SAAS,kBAAT,EAA6B,SAASC,kBAAT,GAA+B;AAC1D,OAAKC,OAAL,CAAa,KAAb;AACAC,KAAG,uCAAH,EAA4C,UAACC,IAAD,EAAU;AACpD,QAAMC,eAAeC,iBAAEC,IAAF,CAAOjB,WAAP,EAAoBkB,GAApB,CAAwB;AAAA,aAAYb,aAAaC,QAAb,CAAZ;AAAA,KAAxB,CAArB;AACAa,YACGC,GADH,CACOL,YADP,EAEGR,IAFH,CAEQ,YAAM;AACVO;AACD,KAJH,EAKGO,KALH,CAKS,UAACC,KAAD,EAAW;AAChBR,WAAKQ,KAAL;AACD,KAPH;AAQD,GAVD;;AAYAT,KAAG,8CAAH,EAAmD,UAACC,IAAD,EAAU;AAC3D,QAAMS,cAAc,2BAApB;AACA,kCAAe,OAAf,EAAwB,QAAxB,EAAkCA,WAAlC,EACGhB,IADH,CACQ,UAACC,SAAD,EAAe;AACnBV,aAAOW,KAAP,CACED,SADF,EAEE,2HAFF,EAGE,+CAHF;AAKAM;AACD,KARH,EASGO,KATH,CASSP,IATT;AAUD,GAZD;AAaD,CA3BD","file":"inferUserAgentSpec.js","sourcesContent":["import chai from 'chai'\nimport _ from 'lodash'\nimport inferUserAgent from './../../lib/infer/inferUserAgent'\n\nconst {assert} = chai\n\nconst TEST_RESULT = {\n  darwin: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36',\n  mas: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36',\n  win32: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36',\n  linux: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36'\n}\n\nfunction testPlatform (platform) {\n  return inferUserAgent('0.37.1', platform)\n    .then((userAgent) => {\n      assert.equal(userAgent, TEST_RESULT[platform], 'Correct user agent should be inferred')\n    })\n}\n\ndescribe('Infer User Agent', function testInferUserAgent () {\n  this.timeout(15000)\n  it('Can infer userAgent for all platforms', (done) => {\n    const testPromises = _.keys(TEST_RESULT).map(platform => testPlatform(platform))\n    Promise\n      .all(testPromises)\n      .then(() => {\n        done()\n      })\n      .catch((error) => {\n        done(error)\n      })\n  })\n\n  it('Connection error will still get a user agent', (done) => {\n    const TIMEOUT_URL = 'http://www.google.com:81/'\n    inferUserAgent('1.6.7', 'darwin', TIMEOUT_URL)\n      .then((userAgent) => {\n        assert.equal(\n          userAgent,\n          'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',\n          'Expect default user agent on connection error'\n        )\n        done()\n      })\n      .catch(done)\n  })\n})\n"]}