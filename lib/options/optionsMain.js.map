{"version":3,"sources":["options/optionsMain.js"],"names":["inpOptions","options","dir","name","targetUrl","platform","inferPlatform","arch","inferArch","electronVersion","golemVersion","version","out","process","cwd","overwrite","asar","conceal","icon","counter","width","height","minWidth","minHeight","maxWidth","maxHeight","showMenuBar","fastQuit","userAgent","ignoreCertificate","ignoreGpuBlacklist","enableEs3Apis","insecure","flashPluginDir","flashPath","flash","diskCacheSize","inject","ignore","fullScreen","maximize","hideWindowFrame","verbose","disableContextMenu","disableDevTools","crashReporter","tmpdir","zoom","internalUrls","singleInstance","appVersion","buildVersion","appCopyright","versionString","win32metadata","ProductName","InternalName","FileDescription","processEnvs","tray","basicAuthUsername","basicAuthPassword","setLevel","honest","toLowerCase"],"mappings":"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","file":"optionsMain.js","sourcesContent":["import log from 'loglevel';\n\nimport inferOs from './../infer/inferOs';\nimport normalizeUrl from './normalizeUrl';\nimport packageJson from './../../package.json';\nimport { ELECTRON_VERSION, PLACEHOLDER_APP_DIR } from './../constants';\nimport asyncConfig from './asyncConfig';\n\nconst { inferPlatform, inferArch } = inferOs;\n\n/**\n * Extracts only desired keys from inpOptions and augments it with defaults\n * @param {Object} inpOptions\n * @returns {Promise}\n */\nexport default function (inpOptions) {\n  const options = {\n    dir: PLACEHOLDER_APP_DIR,\n    name: inpOptions.name,\n    targetUrl: normalizeUrl(inpOptions.targetUrl),\n    platform: inpOptions.platform || inferPlatform(),\n    arch: inpOptions.arch || inferArch(),\n    electronVersion: inpOptions.electronVersion || ELECTRON_VERSION,\n    golemVersion: packageJson.version,\n    out: inpOptions.out || process.cwd(),\n    overwrite: inpOptions.overwrite,\n    asar: inpOptions.conceal || false,\n    icon: inpOptions.icon,\n    counter: inpOptions.counter || false,\n    width: inpOptions.width || 1280,\n    height: inpOptions.height || 800,\n    minWidth: inpOptions.minWidth,\n    minHeight: inpOptions.minHeight,\n    maxWidth: inpOptions.maxWidth,\n    maxHeight: inpOptions.maxHeight,\n    showMenuBar: inpOptions.showMenuBar || false,\n    fastQuit: inpOptions.fastQuit || false,\n    userAgent: inpOptions.userAgent,\n    ignoreCertificate: inpOptions.ignoreCertificate || false,\n    ignoreGpuBlacklist: inpOptions.ignoreGpuBlacklist || false,\n    enableEs3Apis: inpOptions.enableEs3Apis || false,\n    insecure: inpOptions.insecure || false,\n    flashPluginDir: inpOptions.flashPath || inpOptions.flash || null,\n    diskCacheSize: inpOptions.diskCacheSize || null,\n    inject: inpOptions.inject || null,\n    ignore: 'src',\n    fullScreen: inpOptions.fullScreen || false,\n    maximize: inpOptions.maximize || false,\n    hideWindowFrame: inpOptions.hideWindowFrame,\n    verbose: inpOptions.verbose,\n    disableContextMenu: inpOptions.disableContextMenu,\n    disableDevTools: inpOptions.disableDevTools,\n    crashReporter: inpOptions.crashReporter,\n    // workaround for electron-packager#375\n    tmpdir: false,\n    zoom: inpOptions.zoom || 1.0,\n    internalUrls: inpOptions.internalUrls || null,\n    singleInstance: inpOptions.singleInstance || false,\n    appVersion: inpOptions.appVersion,\n    buildVersion: inpOptions.buildVersion,\n    appCopyright: inpOptions.appCopyright,\n    versionString: inpOptions.versionString,\n    win32metadata: inpOptions.win32metadata || {\n      ProductName: inpOptions.name,\n      InternalName: inpOptions.name,\n      FileDescription: inpOptions.name,\n    },\n    processEnvs: inpOptions.processEnvs,\n    tray: inpOptions.tray || false,\n    basicAuthUsername: inpOptions.basicAuthUsername || null,\n    basicAuthPassword: inpOptions.basicAuthPassword || null,\n  };\n\n  if (options.verbose) {\n    log.setLevel('trace');\n  } else {\n    log.setLevel('error');\n  }\n\n  if (options.flashPluginDir) {\n    options.insecure = true;\n  }\n\n  if (inpOptions.honest) {\n    options.userAgent = null;\n  }\n\n  if (options.platform.toLowerCase() === 'windows') {\n    options.platform = 'win32';\n  }\n\n  if (options.platform.toLowerCase() === 'osx' || options.platform.toLowerCase() === 'mac') {\n    options.platform = 'darwin';\n  }\n\n  if (options.width > options.maxWidth) {\n    options.width = options.maxWidth;\n  }\n\n  if (options.height > options.maxHeight) {\n    options.height = options.maxHeight;\n  }\n\n  return asyncConfig(options);\n}\n"]}